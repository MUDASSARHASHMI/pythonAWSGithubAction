name: Deploy my Lambda Function

# trigger on all push events to main branch
on:
  push:
    branches:
      - feature*

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install linting libraries
        run: |
            cd action
            pip install flake8
      - name: Lint with flake8
        run: |
            # Select identifies which errors should cause the job to fail
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # The exit zero flag will show errors as warnings and not fail the run
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install libraries
        run: |
            cd action
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi
      - name: Create zip bundle
        run: |
            cd action
            zip -r ../${{ github.sha }}.zip .
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip

  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: zipped-bundle
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload to S3
        run: aws s3 cp ${{ github.sha }}.zip s3://mysuperbucketfortestingpurpose1/${{ github.repository }}/${{ github.sha }}.zip

  nonprod:
    runs-on: ubuntu-latest
    needs: upload
    strategy:
      matrix:
        input: ["Hello", "Hi"]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Create test function
        run: |
            aws lambda create-function --function-name test-function-${{ matrix.input }} \
              --code S3Bucket=mysuperbucketfortestingpurpose1,S3Key=${{ github.repository }}/${{ github.sha }}.zip \
              --handler lambda_function.lambda_handler --runtime python3.11 \
              --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/my-lambda-role
      - name: Sleep for 30 seconds
        run: |
          aws lambda invoke --function-name test-function-${{ matrix.input }} \
          --payload $(echo "{\"input\": \"${{ matrix.input }}\"}" | base64) 
          --output json out
          if grep -q "Error" out; then
          exit1
          fi
      - name: Destroy test function
        if: ${{ always() }}
        run: |
            aws lambda delete-function --function-name test-function-${{ matrix.input }}

  deploy:
    runs-on: ubuntu-latest
    needs: upload
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Update function code
        run: |
            aws lambda update-function-code \
              --function-name test-function-${{ matrix.input }} \
              --s3-bucket s3://mysuperbucketfortestingpurpose1 \
              --s3-key ${{ github.repository }}/${{ github.sha }}.zip \
              --publish